---
apiVersion: v1
kind: Namespace
metadata:
  name: cb-backends
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-<project>
  namespace: cb-backends
  labels:
    app: backend-<project>
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-<project>
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend-<project>
    spec:
      containers:
        - name: backend-<project>
          image: 037742176437.dkr.ecr.us-east-1.amazonaws.com/cb_<project>_production:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2000m
              memory: 4000Mi
            limits:
              cpu: 2000m
              memory: 4000Mi
          ports:
            - containerPort: 8000
          livenessProbe: # check if pod is ready
            httpGet:
              path: /healthcheck/
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 60
          readinessProbe: # check if pod is ready
            httpGet:
              path: /healthcheck/
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 60

---
apiVersion: v1
kind: Service
metadata:
  namespace: cb-backends
  name: service-prod-<project> # (A)
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-name: "k8s-priv-prod-serv-<project>"
spec:
  ports:
    - protocol: TCP
      port: 80 # Port accessible inside cluster
      targetPort: 8000 # Port to forward to inside the pod

  type: ClusterIP
  selector:
    app.kubernetes.io/name: backend-<project>
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: cb-backends
  name: ingress-prod-<project>
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck/
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-prod-<project> # (A)
                port:
                  number: 80

---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: backend-<project>-hpa
  namespace: cb-backends
spec:
  scaleTargetRef:
    kind: Deployment
    name: deployment-<project>
    apiVersion: apps/v1
  minReplicas: 1
  maxReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 40
